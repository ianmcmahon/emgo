// Peripheral: FMC_Bank1_Periph  Flexible Memory Controller.
// Instances:
//  FMC_Bank1  mmap.FMC_Bank1_R_BASE
// Registers:
//  0x00 32  BTCR{BCR,BTR}[4] NOR/PSRAM chip-select control register(BCR) and chip-select timing register(BTR).
// Import:
//  /Users/ian/code/src/github.com/ianmcmahon/emgo/egpath/src/stm32/o/f469xx/mmap
package fmc

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	MBKEN     BCR = 0x01 << 0  //+ Memory bank enable bit.
	MUXEN     BCR = 0x01 << 1  //+ Address/data multiplexing enable bit.
	MTYP      BCR = 0x03 << 2  //+ MTYP[1:0] bits (Memory type).
	MWID      BCR = 0x03 << 4  //+ MWID[1:0] bits (Memory data bus width).
	FACCEN    BCR = 0x01 << 6  //+ Flash access enable.
	BURSTEN   BCR = 0x01 << 8  //+ Burst enable bit.
	WAITPOL   BCR = 0x01 << 9  //+ Wait signal polarity bit.
	WAITCFG   BCR = 0x01 << 11 //+ Wait timing configuration.
	WREN      BCR = 0x01 << 12 //+ Write enable bit.
	WAITEN    BCR = 0x01 << 13 //+ Wait enable bit.
	EXTMOD    BCR = 0x01 << 14 //+ Extended mode enable.
	ASYNCWAIT BCR = 0x01 << 15 //+ Asynchronous wait.
	CPSIZE    BCR = 0x07 << 16 //+ CRAM page size.
	CBURSTRW  BCR = 0x01 << 19 //+ Write burst enable.
	CCLKEN    BCR = 0x01 << 20 //+ Continous clock enable.
	WFDIS     BCR = 0x01 << 21 //+ Write FIFO Disable.
)

const (
	MBKENn     = 0
	MUXENn     = 1
	MTYPn      = 2
	MWIDn      = 4
	FACCENn    = 6
	BURSTENn   = 8
	WAITPOLn   = 9
	WAITCFGn   = 11
	WRENn      = 12
	WAITENn    = 13
	EXTMODn    = 14
	ASYNCWAITn = 15
	CPSIZEn    = 16
	CBURSTRWn  = 19
	CCLKENn    = 20
	WFDISn     = 21
)

const (
	ADDSET  BTR = 0x0F << 0  //+ ADDSET[3:0] bits (Address setup phase duration).
	ADDHLD  BTR = 0x0F << 4  //+ ADDHLD[3:0] bits (Address-hold phase duration).
	DATAST  BTR = 0xFF << 8  //+ DATAST [3:0] bits (Data-phase duration).
	BUSTURN BTR = 0x0F << 16 //+ BUSTURN[3:0] bits (Bus turnaround phase duration).
	CLKDIV  BTR = 0x0F << 20 //+ CLKDIV[3:0] bits (Clock divide ratio).
	DATLAT  BTR = 0x0F << 24 //+ DATLA[3:0] bits (Data latency).
	ACCMOD  BTR = 0x03 << 28 //+ ACCMOD[1:0] bits (Access mode).
)

const (
	ADDSETn  = 0
	ADDHLDn  = 4
	DATASTn  = 8
	BUSTURNn = 16
	CLKDIVn  = 20
	DATLATn  = 24
	ACCMODn  = 28
)
