package syscfg

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"bits"
	"mmio"
	"unsafe"

	"stm32/o/f469xx/mmap"
)

type SYSCFG_Periph struct {
	MEMRMP RMEMRMP
	PMC    RPMC
	EXTICR [4]REXTICR
	_      [2]uint32
	CMPCR  RCMPCR
}

func (p *SYSCFG_Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

//emgo:const
var SYSCFG = (*SYSCFG_Periph)(unsafe.Pointer(uintptr(mmap.SYSCFG_BASE)))

type MEMRMP uint32

func (b MEMRMP) Field(mask MEMRMP) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MEMRMP) J(v int) MEMRMP {
	return MEMRMP(bits.MakeField32(v, uint32(mask)))
}

type RMEMRMP struct{ mmio.U32 }

func (r *RMEMRMP) Bits(mask MEMRMP) MEMRMP  { return MEMRMP(r.U32.Bits(uint32(mask))) }
func (r *RMEMRMP) StoreBits(mask, b MEMRMP) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RMEMRMP) SetBits(mask MEMRMP)      { r.U32.SetBits(uint32(mask)) }
func (r *RMEMRMP) ClearBits(mask MEMRMP)    { r.U32.ClearBits(uint32(mask)) }
func (r *RMEMRMP) Load() MEMRMP             { return MEMRMP(r.U32.Load()) }
func (r *RMEMRMP) Store(b MEMRMP)           { r.U32.Store(uint32(b)) }

func (r *RMEMRMP) AtomicStoreBits(mask, b MEMRMP) { r.U32.AtomicStoreBits(uint32(mask), uint32(b)) }
func (r *RMEMRMP) AtomicSetBits(mask MEMRMP)      { r.U32.AtomicSetBits(uint32(mask)) }
func (r *RMEMRMP) AtomicClearBits(mask MEMRMP)    { r.U32.AtomicClearBits(uint32(mask)) }

type RMMEMRMP struct{ mmio.UM32 }

func (rm RMMEMRMP) Load() MEMRMP   { return MEMRMP(rm.UM32.Load()) }
func (rm RMMEMRMP) Store(b MEMRMP) { rm.UM32.Store(uint32(b)) }

func (p *SYSCFG_Periph) MEM_MODE() RMMEMRMP {
	return RMMEMRMP{mmio.UM32{&p.MEMRMP.U32, uint32(MEM_MODE)}}
}

func (p *SYSCFG_Periph) UFB_MODE() RMMEMRMP {
	return RMMEMRMP{mmio.UM32{&p.MEMRMP.U32, uint32(UFB_MODE)}}
}

func (p *SYSCFG_Periph) SWP_FMC() RMMEMRMP {
	return RMMEMRMP{mmio.UM32{&p.MEMRMP.U32, uint32(SWP_FMC)}}
}

type PMC uint32

func (b PMC) Field(mask PMC) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PMC) J(v int) PMC {
	return PMC(bits.MakeField32(v, uint32(mask)))
}

type RPMC struct{ mmio.U32 }

func (r *RPMC) Bits(mask PMC) PMC     { return PMC(r.U32.Bits(uint32(mask))) }
func (r *RPMC) StoreBits(mask, b PMC) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RPMC) SetBits(mask PMC)      { r.U32.SetBits(uint32(mask)) }
func (r *RPMC) ClearBits(mask PMC)    { r.U32.ClearBits(uint32(mask)) }
func (r *RPMC) Load() PMC             { return PMC(r.U32.Load()) }
func (r *RPMC) Store(b PMC)           { r.U32.Store(uint32(b)) }

func (r *RPMC) AtomicStoreBits(mask, b PMC) { r.U32.AtomicStoreBits(uint32(mask), uint32(b)) }
func (r *RPMC) AtomicSetBits(mask PMC)      { r.U32.AtomicSetBits(uint32(mask)) }
func (r *RPMC) AtomicClearBits(mask PMC)    { r.U32.AtomicClearBits(uint32(mask)) }

type RMPMC struct{ mmio.UM32 }

func (rm RMPMC) Load() PMC   { return PMC(rm.UM32.Load()) }
func (rm RMPMC) Store(b PMC) { rm.UM32.Store(uint32(b)) }

func (p *SYSCFG_Periph) ADCxDC2() RMPMC {
	return RMPMC{mmio.UM32{&p.PMC.U32, uint32(ADCxDC2)}}
}

func (p *SYSCFG_Periph) MII_RMII_SEL() RMPMC {
	return RMPMC{mmio.UM32{&p.PMC.U32, uint32(MII_RMII_SEL)}}
}

type EXTICR uint32

func (b EXTICR) Field(mask EXTICR) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask EXTICR) J(v int) EXTICR {
	return EXTICR(bits.MakeField32(v, uint32(mask)))
}

type REXTICR struct{ mmio.U32 }

func (r *REXTICR) Bits(mask EXTICR) EXTICR  { return EXTICR(r.U32.Bits(uint32(mask))) }
func (r *REXTICR) StoreBits(mask, b EXTICR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *REXTICR) SetBits(mask EXTICR)      { r.U32.SetBits(uint32(mask)) }
func (r *REXTICR) ClearBits(mask EXTICR)    { r.U32.ClearBits(uint32(mask)) }
func (r *REXTICR) Load() EXTICR             { return EXTICR(r.U32.Load()) }
func (r *REXTICR) Store(b EXTICR)           { r.U32.Store(uint32(b)) }

func (r *REXTICR) AtomicStoreBits(mask, b EXTICR) { r.U32.AtomicStoreBits(uint32(mask), uint32(b)) }
func (r *REXTICR) AtomicSetBits(mask EXTICR)      { r.U32.AtomicSetBits(uint32(mask)) }
func (r *REXTICR) AtomicClearBits(mask EXTICR)    { r.U32.AtomicClearBits(uint32(mask)) }

type RMEXTICR struct{ mmio.UM32 }

func (rm RMEXTICR) Load() EXTICR   { return EXTICR(rm.UM32.Load()) }
func (rm RMEXTICR) Store(b EXTICR) { rm.UM32.Store(uint32(b)) }

func (p *SYSCFG_Periph) EXTI0(n int) RMEXTICR {
	return RMEXTICR{mmio.UM32{&p.EXTICR[n].U32, uint32(EXTI0)}}
}

func (p *SYSCFG_Periph) EXTI1(n int) RMEXTICR {
	return RMEXTICR{mmio.UM32{&p.EXTICR[n].U32, uint32(EXTI1)}}
}

func (p *SYSCFG_Periph) EXTI2(n int) RMEXTICR {
	return RMEXTICR{mmio.UM32{&p.EXTICR[n].U32, uint32(EXTI2)}}
}

func (p *SYSCFG_Periph) EXTI3(n int) RMEXTICR {
	return RMEXTICR{mmio.UM32{&p.EXTICR[n].U32, uint32(EXTI3)}}
}

type CMPCR uint32

func (b CMPCR) Field(mask CMPCR) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask CMPCR) J(v int) CMPCR {
	return CMPCR(bits.MakeField32(v, uint32(mask)))
}

type RCMPCR struct{ mmio.U32 }

func (r *RCMPCR) Bits(mask CMPCR) CMPCR   { return CMPCR(r.U32.Bits(uint32(mask))) }
func (r *RCMPCR) StoreBits(mask, b CMPCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RCMPCR) SetBits(mask CMPCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RCMPCR) ClearBits(mask CMPCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RCMPCR) Load() CMPCR             { return CMPCR(r.U32.Load()) }
func (r *RCMPCR) Store(b CMPCR)           { r.U32.Store(uint32(b)) }

func (r *RCMPCR) AtomicStoreBits(mask, b CMPCR) { r.U32.AtomicStoreBits(uint32(mask), uint32(b)) }
func (r *RCMPCR) AtomicSetBits(mask CMPCR)      { r.U32.AtomicSetBits(uint32(mask)) }
func (r *RCMPCR) AtomicClearBits(mask CMPCR)    { r.U32.AtomicClearBits(uint32(mask)) }

type RMCMPCR struct{ mmio.UM32 }

func (rm RMCMPCR) Load() CMPCR   { return CMPCR(rm.UM32.Load()) }
func (rm RMCMPCR) Store(b CMPCR) { rm.UM32.Store(uint32(b)) }

func (p *SYSCFG_Periph) CMP_PD() RMCMPCR {
	return RMCMPCR{mmio.UM32{&p.CMPCR.U32, uint32(CMP_PD)}}
}

func (p *SYSCFG_Periph) READY() RMCMPCR {
	return RMCMPCR{mmio.UM32{&p.CMPCR.U32, uint32(READY)}}
}
