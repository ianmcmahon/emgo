// Peripheral: FLASH_Periph  FLASH Registers.
// Instances:
//  FLASH  mmap.FLASH_R_BASE
// Registers:
//  0x00 32  ACR      Access control register.
//  0x04 32  KEYR     Key register.
//  0x08 32  OPTKEYR  Option key register.
//  0x0C 32  SR       Status register.
//  0x10 32  CR       Control register.
//  0x14 32  OPTCR[2] Option control registers.
// Import:
//  stm32/o/f746xx/mmap
package flash

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	LATENCY      ACR = 0x0F << 0 //+
	LATENCY_0WS  ACR = 0x00 << 0
	LATENCY_1WS  ACR = 0x01 << 0
	LATENCY_2WS  ACR = 0x02 << 0
	LATENCY_3WS  ACR = 0x03 << 0
	LATENCY_4WS  ACR = 0x04 << 0
	LATENCY_5WS  ACR = 0x05 << 0
	LATENCY_6WS  ACR = 0x06 << 0
	LATENCY_7WS  ACR = 0x07 << 0
	LATENCY_8WS  ACR = 0x08 << 0
	LATENCY_9WS  ACR = 0x09 << 0
	LATENCY_10WS ACR = 0x0A << 0
	LATENCY_11WS ACR = 0x0B << 0
	LATENCY_12WS ACR = 0x0C << 0
	LATENCY_13WS ACR = 0x0D << 0
	LATENCY_14WS ACR = 0x0E << 0
	LATENCY_15WS ACR = 0x0F << 0
	PRFTEN       ACR = 0x01 << 8  //+
	ARTEN        ACR = 0x01 << 9  //+
	ARTRST       ACR = 0x01 << 11 //+
)

const (
	LATENCYn = 0
	PRFTENn  = 8
	ARTENn   = 9
	ARTRSTn  = 11
)

const (
	EOP    SR = 0x01 << 0  //+
	OPERR  SR = 0x01 << 1  //+
	WRPERR SR = 0x01 << 4  //+
	PGAERR SR = 0x01 << 5  //+
	PGPERR SR = 0x01 << 6  //+
	ERSERR SR = 0x01 << 7  //+
	BSY    SR = 0x01 << 16 //+
)

const (
	EOPn    = 0
	OPERRn  = 1
	WRPERRn = 4
	PGAERRn = 5
	PGPERRn = 6
	ERSERRn = 7
	BSYn    = 16
)

const (
	PG    CR = 0x01 << 0  //+
	SER   CR = 0x01 << 1  //+
	MER   CR = 0x01 << 2  //+
	SNB   CR = 0x0F << 3  //+
	PSIZE CR = 0x03 << 8  //+
	STRT  CR = 0x01 << 16 //+
	EOPIE CR = 0x01 << 24 //+
	ERRIE CR = 0x01 << 25 //+
	LOCK  CR = 0x01 << 31 //+
)

const (
	PGn    = 0
	SERn   = 1
	MERn   = 2
	SNBn   = 3
	PSIZEn = 8
	STRTn  = 16
	EOPIEn = 24
	ERRIEn = 25
	LOCKn  = 31
)

const (
	OPTLOCK    OPTCR = 0x01 << 0  //+
	OPTSTRT    OPTCR = 0x01 << 1  //+
	BOR_LEV    OPTCR = 0x03 << 2  //+
	WWDG_SW    OPTCR = 0x01 << 4  //+
	IWDG_SW    OPTCR = 0x01 << 5  //+
	nRST_STOP  OPTCR = 0x01 << 6  //+
	nRST_STDBY OPTCR = 0x01 << 7  //+
	RDP        OPTCR = 0xFF << 8  //+
	nWRP       OPTCR = 0xFF << 16 //+
	IWDG_STDBY OPTCR = 0x01 << 30 //+
	IWDG_STOP  OPTCR = 0x01 << 31 //+
)

const (
	OPTLOCKn    = 0
	OPTSTRTn    = 1
	BOR_LEVn    = 2
	WWDG_SWn    = 4
	IWDG_SWn    = 5
	nRST_STOPn  = 6
	nRST_STDBYn = 7
	RDPn        = 8
	nWRPn       = 16
	IWDG_STDBYn = 30
	IWDG_STOPn  = 31
)
